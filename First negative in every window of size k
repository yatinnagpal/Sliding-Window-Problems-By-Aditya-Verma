Given an array A[] of size N and a positive integer K, find the first negative integer for each and every window(contiguous subarray) of size K.


vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
    long long int i=0,j=0;
    queue<long long int> q;
    vector<long long int> ans;
    while(j<N){
        if(j-i+1<K){
            if(A[j]<0){
                q.push(A[j]);
            }
            j++;
        }
        else{
          if(A[j]<0){
              q.push(A[j]);
          }
          if(q.empty()){
              ans.push_back(0);
          }
          else{
              ans.push_back(q.front());
          }
          if(A[i]==q.front()){
              q.pop();
          }
          i++;
          j++;
        }
    }
    return ans;
 }
