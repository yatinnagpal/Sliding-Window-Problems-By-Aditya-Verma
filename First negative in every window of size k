Given an array A[] of size N and a positive integer K, find the first negative integer for each and every window(contiguous subarray) of size K.


class Solution {
  public:
    vector<int> firstNegInt(vector<int>& arr, int k) {
        // write code here
        long long int i=0, j=0;
        queue<int>q;
        vector<int>ans;
        int n = arr.size();
        while(j<n){
            if(arr[j]<0){
                q.push(arr[j]);
            }
            if(j-i+1<k){
                j++;
            }
            else if(j-i+1==k){
                if(!q.empty()){
                    ans.push_back(q.front());
                }
                else{
                    ans.push_back(0);
                }
                if(!q.empty() && q.front()==arr[i]){
                    q.pop();
                }
                i++;
                j++;
            }
        }
        return ans;
    }
};
